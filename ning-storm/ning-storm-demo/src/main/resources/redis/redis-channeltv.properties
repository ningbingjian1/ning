#########################################
# Redis connection configuration
#########################################

## connection
redis.host = redisd.mhqqw3.clustercfg.cnn1.cache.amazonaws.com.cn:6379
redis.port = 6379
redis.timeout = 2000

## properties
## the cap on the total number of object instances managed by the pool or a negative value if there is no limit
redis.maxTotal = 200

## the maximum number of "idle" instances that can be held in the pool or a negative value if there is no limit
redis.maxIdle = 200

redis.minIdle = 100

## the maximum number of milliseconds borrowObject() will block.
redis.maxWaitMillis = 100

## minimum amount of time an object may sit idle in the pool before it is eligible for eviction
redis.minEvictableIdleTimeMillis = 864000000

## if minEvictableIdleTimeMillis is positive, then softMinEvictableIdleTimeMillis is ignored
redis.softMinEvictableIdleTimeMillis = 10

redis.numTestsPerEvictionRun = 10
redis.lifo = false

## whether objects borrowed from the pool will be validated before being returned from the borrowObject() method.
redis.testOnBorrow = false

## whether objects borrowed from the pool will be validated when they are returned to the pool via the returnObject() method
redis.testOnReturn = false

## whether objects sitting idle in the pool will be validated by the idle object evictor 
redis.testWhileIdle = false

## the time to sleep between runs of the idle object evictor thread,if negative no idle object evictor thread will be run.
redis.timeBetweenEvictionRunsMillis = 300000

## whether to block when the borrowObject() method is invoked when the maximum number of "active" objects has been reached
redis.blockWhenExhausted = true

